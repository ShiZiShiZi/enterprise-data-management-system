<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hfut.mapper.WaitingRegisterPeopleMapper">
    <resultMap id="BaseResultMap" type="org.hfut.pojo.WaitingRegisterPeople">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="target_department_id" jdbcType="INTEGER" property="targetDepartmentId"/>
        <result column="target_permission" jdbcType="TINYINT" property="targetPermission"/>
        <result column="inviter_id" jdbcType="INTEGER" property="inviterId"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, email, phone_number, target_department_id, target_permission, inviter_id, 
    state
  </sql>
    <select id="selectByExample" parameterType="org.hfut.pojo.WaitingRegisterPeopleExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from waiting_register_people
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from waiting_register_people
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from waiting_register_people
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="org.hfut.pojo.WaitingRegisterPeopleExample">
        delete from waiting_register_people
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.hfut.pojo.WaitingRegisterPeople">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into waiting_register_people (name, email, phone_number,
        target_department_id, target_permission, inviter_id,
        state)
        values (#{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR},
        #{targetDepartmentId,jdbcType=INTEGER}, #{targetPermission,jdbcType=TINYINT}, #{inviterId,jdbcType=INTEGER},
        #{state,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="org.hfut.pojo.WaitingRegisterPeople">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into waiting_register_people
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phoneNumber != null">
                phone_number,
            </if>
            <if test="targetDepartmentId != null">
                target_department_id,
            </if>
            <if test="targetPermission != null">
                target_permission,
            </if>
            <if test="inviterId != null">
                inviter_id,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="targetDepartmentId != null">
                #{targetDepartmentId,jdbcType=INTEGER},
            </if>
            <if test="targetPermission != null">
                #{targetPermission,jdbcType=TINYINT},
            </if>
            <if test="inviterId != null">
                #{inviterId,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hfut.pojo.WaitingRegisterPeopleExample" resultType="java.lang.Long">
        select count(*) from waiting_register_people
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update waiting_register_people
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.phoneNumber != null">
                phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.targetDepartmentId != null">
                target_department_id = #{record.targetDepartmentId,jdbcType=INTEGER},
            </if>
            <if test="record.targetPermission != null">
                target_permission = #{record.targetPermission,jdbcType=TINYINT},
            </if>
            <if test="record.inviterId != null">
                inviter_id = #{record.inviterId,jdbcType=INTEGER},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update waiting_register_people
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
        target_department_id = #{record.targetDepartmentId,jdbcType=INTEGER},
        target_permission = #{record.targetPermission,jdbcType=TINYINT},
        inviter_id = #{record.inviterId,jdbcType=INTEGER},
        state = #{record.state,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.hfut.pojo.WaitingRegisterPeople">
        update waiting_register_people
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="targetDepartmentId != null">
                target_department_id = #{targetDepartmentId,jdbcType=INTEGER},
            </if>
            <if test="targetPermission != null">
                target_permission = #{targetPermission,jdbcType=TINYINT},
            </if>
            <if test="inviterId != null">
                inviter_id = #{inviterId,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.hfut.pojo.WaitingRegisterPeople">
    update waiting_register_people
    set name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      target_department_id = #{targetDepartmentId,jdbcType=INTEGER},
      target_permission = #{targetPermission,jdbcType=TINYINT},
      inviter_id = #{inviterId,jdbcType=INTEGER},
      state = #{state,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>