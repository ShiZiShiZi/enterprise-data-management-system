<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hfut.mapper.FinancialdetailfeedbackMapper">
    <resultMap id="BaseResultMap" type="org.hfut.pojo.Financialdetailfeedback">
        <id column="financialdetailid" jdbcType="INTEGER" property="financialdetailid"/>
        <result column="requesttime" jdbcType="TIMESTAMP" property="requesttime"/>
        <result column="projectpeopleid" jdbcType="INTEGER" property="projectpeopleid"/>
        <result column="audittime" jdbcType="TIMESTAMP" property="audittime"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    financialdetailid, requesttime, projectpeopleid, audittime, state, description
  </sql>
    <select id="selectByExample" parameterType="org.hfut.pojo.FinancialdetailfeedbackExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from financialdetailfeedback
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from financialdetailfeedback
        where financialdetailid = #{financialdetailid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from financialdetailfeedback
    where financialdetailid = #{financialdetailid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="org.hfut.pojo.FinancialdetailfeedbackExample">
        delete from financialdetailfeedback
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.hfut.pojo.Financialdetailfeedback">
    insert into financialdetailfeedback (financialdetailid, requesttime, 
      projectpeopleid, audittime, state, 
      description)
    values (#{financialdetailid,jdbcType=INTEGER}, #{requesttime,jdbcType=TIMESTAMP}, 
      #{projectpeopleid,jdbcType=INTEGER}, #{audittime,jdbcType=TIMESTAMP}, #{state,jdbcType=TINYINT}, 
      #{description,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="org.hfut.pojo.Financialdetailfeedback">
        insert into financialdetailfeedback
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="financialdetailid != null">
                financialdetailid,
            </if>
            <if test="requesttime != null">
                requesttime,
            </if>
            <if test="projectpeopleid != null">
                projectpeopleid,
            </if>
            <if test="audittime != null">
                audittime,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="financialdetailid != null">
                #{financialdetailid,jdbcType=INTEGER},
            </if>
            <if test="requesttime != null">
                #{requesttime,jdbcType=TIMESTAMP},
            </if>
            <if test="projectpeopleid != null">
                #{projectpeopleid,jdbcType=INTEGER},
            </if>
            <if test="audittime != null">
                #{audittime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=TINYINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hfut.pojo.FinancialdetailfeedbackExample"
            resultType="java.lang.Long">
        select count(*) from financialdetailfeedback
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update financialdetailfeedback
        <set>
            <if test="record.financialdetailid != null">
                financialdetailid = #{record.financialdetailid,jdbcType=INTEGER},
            </if>
            <if test="record.requesttime != null">
                requesttime = #{record.requesttime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.projectpeopleid != null">
                projectpeopleid = #{record.projectpeopleid,jdbcType=INTEGER},
            </if>
            <if test="record.audittime != null">
                audittime = #{record.audittime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=TINYINT},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update financialdetailfeedback
        set financialdetailid = #{record.financialdetailid,jdbcType=INTEGER},
        requesttime = #{record.requesttime,jdbcType=TIMESTAMP},
        projectpeopleid = #{record.projectpeopleid,jdbcType=INTEGER},
        audittime = #{record.audittime,jdbcType=TIMESTAMP},
        state = #{record.state,jdbcType=TINYINT},
        description = #{record.description,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.hfut.pojo.Financialdetailfeedback">
        update financialdetailfeedback
        <set>
            <if test="requesttime != null">
                requesttime = #{requesttime,jdbcType=TIMESTAMP},
            </if>
            <if test="projectpeopleid != null">
                projectpeopleid = #{projectpeopleid,jdbcType=INTEGER},
            </if>
            <if test="audittime != null">
                audittime = #{audittime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=TINYINT},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where financialdetailid = #{financialdetailid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.hfut.pojo.Financialdetailfeedback">
    update financialdetailfeedback
    set requesttime = #{requesttime,jdbcType=TIMESTAMP},
      projectpeopleid = #{projectpeopleid,jdbcType=INTEGER},
      audittime = #{audittime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR}
    where financialdetailid = #{financialdetailid,jdbcType=INTEGER}
  </update>
</mapper>