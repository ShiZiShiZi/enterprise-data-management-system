<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hfut.mapper.SystemlogMapper">
    <resultMap id="BaseResultMap" type="org.hfut.pojo.Systemlog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="logtime" jdbcType="TIMESTAMP" property="logtime"/>
        <result column="action" jdbcType="VARCHAR" property="action"/>
        <result column="actionpeopleid" jdbcType="INTEGER" property="actionpeopleid"/>
        <result column="result" jdbcType="TINYINT" property="result"/>
        <result column="logmsg" jdbcType="VARCHAR" property="logmsg"/>
        <result column="errormsg" jdbcType="VARCHAR" property="errormsg"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, logtime, action, actionpeopleid, result, logmsg, errormsg
  </sql>
    <select id="selectByExample" parameterType="org.hfut.pojo.SystemlogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from systemlog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from systemlog
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from systemlog
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="org.hfut.pojo.SystemlogExample">
        delete from systemlog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.hfut.pojo.Systemlog">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into systemlog (logtime, action, actionpeopleid,
        result, logmsg, errormsg
        )
        values (#{logtime,jdbcType=TIMESTAMP}, #{action,jdbcType=VARCHAR}, #{actionpeopleid,jdbcType=INTEGER},
        #{result,jdbcType=TINYINT}, #{logmsg,jdbcType=VARCHAR}, #{errormsg,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="org.hfut.pojo.Systemlog">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into systemlog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logtime != null">
                logtime,
            </if>
            <if test="action != null">
                action,
            </if>
            <if test="actionpeopleid != null">
                actionpeopleid,
            </if>
            <if test="result != null">
                result,
            </if>
            <if test="logmsg != null">
                logmsg,
            </if>
            <if test="errormsg != null">
                errormsg,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logtime != null">
                #{logtime,jdbcType=TIMESTAMP},
            </if>
            <if test="action != null">
                #{action,jdbcType=VARCHAR},
            </if>
            <if test="actionpeopleid != null">
                #{actionpeopleid,jdbcType=INTEGER},
            </if>
            <if test="result != null">
                #{result,jdbcType=TINYINT},
            </if>
            <if test="logmsg != null">
                #{logmsg,jdbcType=VARCHAR},
            </if>
            <if test="errormsg != null">
                #{errormsg,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hfut.pojo.SystemlogExample" resultType="java.lang.Long">
        select count(*) from systemlog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update systemlog
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.logtime != null">
                logtime = #{record.logtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.action != null">
                action = #{record.action,jdbcType=VARCHAR},
            </if>
            <if test="record.actionpeopleid != null">
                actionpeopleid = #{record.actionpeopleid,jdbcType=INTEGER},
            </if>
            <if test="record.result != null">
                result = #{record.result,jdbcType=TINYINT},
            </if>
            <if test="record.logmsg != null">
                logmsg = #{record.logmsg,jdbcType=VARCHAR},
            </if>
            <if test="record.errormsg != null">
                errormsg = #{record.errormsg,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update systemlog
        set id = #{record.id,jdbcType=INTEGER},
        logtime = #{record.logtime,jdbcType=TIMESTAMP},
        action = #{record.action,jdbcType=VARCHAR},
        actionpeopleid = #{record.actionpeopleid,jdbcType=INTEGER},
        result = #{record.result,jdbcType=TINYINT},
        logmsg = #{record.logmsg,jdbcType=VARCHAR},
        errormsg = #{record.errormsg,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.hfut.pojo.Systemlog">
        update systemlog
        <set>
            <if test="logtime != null">
                logtime = #{logtime,jdbcType=TIMESTAMP},
            </if>
            <if test="action != null">
                action = #{action,jdbcType=VARCHAR},
            </if>
            <if test="actionpeopleid != null">
                actionpeopleid = #{actionpeopleid,jdbcType=INTEGER},
            </if>
            <if test="result != null">
                result = #{result,jdbcType=TINYINT},
            </if>
            <if test="logmsg != null">
                logmsg = #{logmsg,jdbcType=VARCHAR},
            </if>
            <if test="errormsg != null">
                errormsg = #{errormsg,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.hfut.pojo.Systemlog">
    update systemlog
    set logtime = #{logtime,jdbcType=TIMESTAMP},
      action = #{action,jdbcType=VARCHAR},
      actionpeopleid = #{actionpeopleid,jdbcType=INTEGER},
      result = #{result,jdbcType=TINYINT},
      logmsg = #{logmsg,jdbcType=VARCHAR},
      errormsg = #{errormsg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>