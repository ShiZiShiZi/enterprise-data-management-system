<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hfut.mapper.SelectProjectPeopleInfoMapper">
    <resultMap id="BaseResultMap" type="org.hfut.pojo.SelectProjectPeopleInfo">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="departmentname" jdbcType="VARCHAR" property="departmentname"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phonenum" jdbcType="VARCHAR" property="phonenum"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="departmentid" jdbcType="INTEGER" property="departmentid"/>
        <result column="acrossdepartment" jdbcType="BIT" property="acrossdepartment"/>
        <result column="permissions" jdbcType="TINYINT" property="permissions"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, departmentname, name, email, phonenum, password, departmentid, acrossdepartment,
    permissions
  </sql>
    <select id="selectByExample" parameterType="org.hfut.pojo.SelectProjectPeopleInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from select_project_people_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="org.hfut.pojo.SelectProjectPeopleInfoExample">
        delete from select_project_people_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.hfut.pojo.SelectProjectPeopleInfo">
    insert into select_project_people_info (id, departmentname, name,
      email, phonenum, password,
      departmentid, acrossdepartment, permissions
      )
    values (#{id,jdbcType=INTEGER}, #{departmentname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{phonenum,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{departmentid,jdbcType=INTEGER}, #{acrossdepartment,jdbcType=BIT}, #{permissions,jdbcType=TINYINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="org.hfut.pojo.SelectProjectPeopleInfo">
        insert into select_project_people_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="departmentname != null">
                departmentname,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phonenum != null">
                phonenum,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="departmentid != null">
                departmentid,
            </if>
            <if test="acrossdepartment != null">
                acrossdepartment,
            </if>
            <if test="permissions != null">
                permissions,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="departmentname != null">
                #{departmentname,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phonenum != null">
                #{phonenum,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="departmentid != null">
                #{departmentid,jdbcType=INTEGER},
            </if>
            <if test="acrossdepartment != null">
                #{acrossdepartment,jdbcType=BIT},
            </if>
            <if test="permissions != null">
                #{permissions,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hfut.pojo.SelectProjectPeopleInfoExample"
            resultType="java.lang.Long">
        select count(*) from select_project_people_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update select_project_people_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.departmentname != null">
                departmentname = #{record.departmentname,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.phonenum != null">
                phonenum = #{record.phonenum,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.departmentid != null">
                departmentid = #{record.departmentid,jdbcType=INTEGER},
            </if>
            <if test="record.acrossdepartment != null">
                acrossdepartment = #{record.acrossdepartment,jdbcType=BIT},
            </if>
            <if test="record.permissions != null">
                permissions = #{record.permissions,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update select_project_people_info
        set id = #{record.id,jdbcType=INTEGER},
        departmentname = #{record.departmentname,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        phonenum = #{record.phonenum,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        departmentid = #{record.departmentid,jdbcType=INTEGER},
        acrossdepartment = #{record.acrossdepartment,jdbcType=BIT},
        permissions = #{record.permissions,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>