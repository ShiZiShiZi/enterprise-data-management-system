<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hfut.mapper.SelectAllFinancialInformationMapper">
    <resultMap id="BaseResultMap" type="org.hfut.pojo.SelectAllFinancialInformation">
        <result column="log_id" jdbcType="INTEGER" property="logId"/>
        <result column="log_num" jdbcType="DOUBLE" property="logNum"/>
        <result column="tax_rate" jdbcType="REAL" property="taxRate"/>
        <result column="log_type" jdbcType="TINYINT" property="logType"/>
        <result column="log_time" jdbcType="TIMESTAMP" property="logTime"/>
        <result column="financial_people_id" jdbcType="INTEGER" property="financialPeopleId"/>
        <result column="detail_id" jdbcType="INTEGER" property="detailId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="detail_num" jdbcType="DOUBLE" property="detailNum"/>
        <result column="detail_time" jdbcType="TIMESTAMP" property="detailTime"/>
        <result column="detail_type" jdbcType="TINYINT" property="detailType"/>
        <result column="project_people_id" jdbcType="INTEGER" property="projectPeopleId"/>
        <result column="model_id" jdbcType="INTEGER" property="modelId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="model_num" jdbcType="DOUBLE" property="modelNum"/>
        <result column="model_type" jdbcType="TINYINT" property="modelType"/>
        <result column="project_Id" jdbcType="INTEGER" property="projectId"/>
        <result column="active" jdbcType="BIT" property="active"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    log_id, log_num, tax_rate, log_type, log_time, financial_people_id, detail_id, title, 
    detail_num, detail_time, detail_type, project_people_id, model_id, name, model_num, 
    model_type, project_Id, active
  </sql>
    <select id="selectByExample" parameterType="org.hfut.pojo.SelectAllFinancialInformationExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from select_all_financial_information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="org.hfut.pojo.SelectAllFinancialInformationExample">
        delete from select_all_financial_information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.hfut.pojo.SelectAllFinancialInformation">
    insert into select_all_financial_information (log_id, log_num, tax_rate, 
      log_type, log_time, financial_people_id, 
      detail_id, title, detail_num, 
      detail_time, detail_type, project_people_id, 
      model_id, name, model_num, 
      model_type, project_Id, active
      )
    values (#{logId,jdbcType=INTEGER}, #{logNum,jdbcType=DOUBLE}, #{taxRate,jdbcType=REAL}, 
      #{logType,jdbcType=TINYINT}, #{logTime,jdbcType=TIMESTAMP}, #{financialPeopleId,jdbcType=INTEGER}, 
      #{detailId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{detailNum,jdbcType=DOUBLE}, 
      #{detailTime,jdbcType=TIMESTAMP}, #{detailType,jdbcType=TINYINT}, #{projectPeopleId,jdbcType=INTEGER}, 
      #{modelId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{modelNum,jdbcType=DOUBLE}, 
      #{modelType,jdbcType=TINYINT}, #{projectId,jdbcType=INTEGER}, #{active,jdbcType=BIT}
      )
  </insert>
    <insert id="insertSelective" parameterType="org.hfut.pojo.SelectAllFinancialInformation">
        insert into select_all_financial_information
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logId != null">
                log_id,
            </if>
            <if test="logNum != null">
                log_num,
            </if>
            <if test="taxRate != null">
                tax_rate,
            </if>
            <if test="logType != null">
                log_type,
            </if>
            <if test="logTime != null">
                log_time,
            </if>
            <if test="financialPeopleId != null">
                financial_people_id,
            </if>
            <if test="detailId != null">
                detail_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="detailNum != null">
                detail_num,
            </if>
            <if test="detailTime != null">
                detail_time,
            </if>
            <if test="detailType != null">
                detail_type,
            </if>
            <if test="projectPeopleId != null">
                project_people_id,
            </if>
            <if test="modelId != null">
                model_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="modelNum != null">
                model_num,
            </if>
            <if test="modelType != null">
                model_type,
            </if>
            <if test="projectId != null">
                project_Id,
            </if>
            <if test="active != null">
                active,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logId != null">
                #{logId,jdbcType=INTEGER},
            </if>
            <if test="logNum != null">
                #{logNum,jdbcType=DOUBLE},
            </if>
            <if test="taxRate != null">
                #{taxRate,jdbcType=REAL},
            </if>
            <if test="logType != null">
                #{logType,jdbcType=TINYINT},
            </if>
            <if test="logTime != null">
                #{logTime,jdbcType=TIMESTAMP},
            </if>
            <if test="financialPeopleId != null">
                #{financialPeopleId,jdbcType=INTEGER},
            </if>
            <if test="detailId != null">
                #{detailId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="detailNum != null">
                #{detailNum,jdbcType=DOUBLE},
            </if>
            <if test="detailTime != null">
                #{detailTime,jdbcType=TIMESTAMP},
            </if>
            <if test="detailType != null">
                #{detailType,jdbcType=TINYINT},
            </if>
            <if test="projectPeopleId != null">
                #{projectPeopleId,jdbcType=INTEGER},
            </if>
            <if test="modelId != null">
                #{modelId,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="modelNum != null">
                #{modelNum,jdbcType=DOUBLE},
            </if>
            <if test="modelType != null">
                #{modelType,jdbcType=TINYINT},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=INTEGER},
            </if>
            <if test="active != null">
                #{active,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hfut.pojo.SelectAllFinancialInformationExample"
            resultType="java.lang.Long">
        select count(*) from select_all_financial_information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update select_all_financial_information
        <set>
            <if test="record.logId != null">
                log_id = #{record.logId,jdbcType=INTEGER},
            </if>
            <if test="record.logNum != null">
                log_num = #{record.logNum,jdbcType=DOUBLE},
            </if>
            <if test="record.taxRate != null">
                tax_rate = #{record.taxRate,jdbcType=REAL},
            </if>
            <if test="record.logType != null">
                log_type = #{record.logType,jdbcType=TINYINT},
            </if>
            <if test="record.logTime != null">
                log_time = #{record.logTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.financialPeopleId != null">
                financial_people_id = #{record.financialPeopleId,jdbcType=INTEGER},
            </if>
            <if test="record.detailId != null">
                detail_id = #{record.detailId,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.detailNum != null">
                detail_num = #{record.detailNum,jdbcType=DOUBLE},
            </if>
            <if test="record.detailTime != null">
                detail_time = #{record.detailTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.detailType != null">
                detail_type = #{record.detailType,jdbcType=TINYINT},
            </if>
            <if test="record.projectPeopleId != null">
                project_people_id = #{record.projectPeopleId,jdbcType=INTEGER},
            </if>
            <if test="record.modelId != null">
                model_id = #{record.modelId,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.modelNum != null">
                model_num = #{record.modelNum,jdbcType=DOUBLE},
            </if>
            <if test="record.modelType != null">
                model_type = #{record.modelType,jdbcType=TINYINT},
            </if>
            <if test="record.projectId != null">
                project_Id = #{record.projectId,jdbcType=INTEGER},
            </if>
            <if test="record.active != null">
                active = #{record.active,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update select_all_financial_information
        set log_id = #{record.logId,jdbcType=INTEGER},
        log_num = #{record.logNum,jdbcType=DOUBLE},
        tax_rate = #{record.taxRate,jdbcType=REAL},
        log_type = #{record.logType,jdbcType=TINYINT},
        log_time = #{record.logTime,jdbcType=TIMESTAMP},
        financial_people_id = #{record.financialPeopleId,jdbcType=INTEGER},
        detail_id = #{record.detailId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        detail_num = #{record.detailNum,jdbcType=DOUBLE},
        detail_time = #{record.detailTime,jdbcType=TIMESTAMP},
        detail_type = #{record.detailType,jdbcType=TINYINT},
        project_people_id = #{record.projectPeopleId,jdbcType=INTEGER},
        model_id = #{record.modelId,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        model_num = #{record.modelNum,jdbcType=DOUBLE},
        model_type = #{record.modelType,jdbcType=TINYINT},
        project_Id = #{record.projectId,jdbcType=INTEGER},
        active = #{record.active,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>