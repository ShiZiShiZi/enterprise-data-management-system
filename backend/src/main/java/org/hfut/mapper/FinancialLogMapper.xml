<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hfut.mapper.FinancialLogMapper">
    <resultMap id="BaseResultMap" type="org.hfut.pojo.FinancialLog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="num" jdbcType="DOUBLE" property="num"/>
        <result column="tax_rate" jdbcType="REAL" property="taxRate"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="financial_detail_id" jdbcType="INTEGER" property="financialDetailId"/>
        <result column="project_people_id" jdbcType="INTEGER" property="projectPeopleId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, num, tax_rate, type, time, financial_detail_id, project_people_id
  </sql>
    <select id="selectByExample" parameterType="org.hfut.pojo.FinancialLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from financial_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from financial_log
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from financial_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="org.hfut.pojo.FinancialLogExample">
        delete from financial_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.hfut.pojo.FinancialLog">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into financial_log (num, tax_rate, type,
        time, financial_detail_id, project_people_id
        )
        values (#{num,jdbcType=DOUBLE}, #{taxRate,jdbcType=REAL}, #{type,jdbcType=TINYINT},
        #{time,jdbcType=TIMESTAMP}, #{financialDetailId,jdbcType=INTEGER}, #{projectPeopleId,jdbcType=INTEGER}
        )
  </insert>
    <insert id="insertSelective" parameterType="org.hfut.pojo.FinancialLog">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into financial_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="num != null">
                num,
            </if>
            <if test="taxRate != null">
                tax_rate,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="financialDetailId != null">
                financial_detail_id,
            </if>
            <if test="projectPeopleId != null">
                project_people_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="num != null">
                #{num,jdbcType=DOUBLE},
            </if>
            <if test="taxRate != null">
                #{taxRate,jdbcType=REAL},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="financialDetailId != null">
                #{financialDetailId,jdbcType=INTEGER},
            </if>
            <if test="projectPeopleId != null">
                #{projectPeopleId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hfut.pojo.FinancialLogExample" resultType="java.lang.Long">
        select count(*) from financial_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update financial_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.num != null">
                num = #{record.num,jdbcType=DOUBLE},
            </if>
            <if test="record.taxRate != null">
                tax_rate = #{record.taxRate,jdbcType=REAL},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=TINYINT},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.financialDetailId != null">
                financial_detail_id = #{record.financialDetailId,jdbcType=INTEGER},
            </if>
            <if test="record.projectPeopleId != null">
                project_people_id = #{record.projectPeopleId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update financial_log
        set id = #{record.id,jdbcType=INTEGER},
        num = #{record.num,jdbcType=DOUBLE},
        tax_rate = #{record.taxRate,jdbcType=REAL},
        type = #{record.type,jdbcType=TINYINT},
        time = #{record.time,jdbcType=TIMESTAMP},
        financial_detail_id = #{record.financialDetailId,jdbcType=INTEGER},
        project_people_id = #{record.projectPeopleId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.hfut.pojo.FinancialLog">
        update financial_log
        <set>
            <if test="num != null">
                num = #{num,jdbcType=DOUBLE},
            </if>
            <if test="taxRate != null">
                tax_rate = #{taxRate,jdbcType=REAL},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="financialDetailId != null">
                financial_detail_id = #{financialDetailId,jdbcType=INTEGER},
            </if>
            <if test="projectPeopleId != null">
                project_people_id = #{projectPeopleId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.hfut.pojo.FinancialLog">
    update financial_log
    set num = #{num,jdbcType=DOUBLE},
      tax_rate = #{taxRate,jdbcType=REAL},
      type = #{type,jdbcType=TINYINT},
      time = #{time,jdbcType=TIMESTAMP},
      financial_detail_id = #{financialDetailId,jdbcType=INTEGER},
      project_people_id = #{projectPeopleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>