<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hfut.mapper.SelectFinancialdetailFeedbackMapper">
    <resultMap id="BaseResultMap" type="org.hfut.pojo.SelectFinancialdetailFeedback">
        <result column="projectpeopleid" jdbcType="INTEGER" property="projectpeopleid"/>
        <result column="projectpeoplename" jdbcType="VARCHAR" property="projectpeoplename"/>
        <result column="projectid" jdbcType="INTEGER" property="projectid"/>
        <result column="projecttitle" jdbcType="VARCHAR" property="projecttitle"/>
        <result column="detailid" jdbcType="INTEGER" property="detailid"/>
        <result column="detailtitle" jdbcType="VARCHAR" property="detailtitle"/>
        <result column="detailtype" jdbcType="TINYINT" property="detailtype"/>
        <result column="requesttime" jdbcType="TIMESTAMP" property="requesttime"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="audittime" jdbcType="TIMESTAMP" property="audittime"/>
        <result column="reviewerid" jdbcType="INTEGER" property="reviewerid"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    projectpeopleid, projectpeoplename, projectid, projecttitle, detailid, detailtitle, 
    detailtype, requesttime, state, description, audittime, reviewerid
  </sql>
    <select id="selectByExample" parameterType="org.hfut.pojo.SelectFinancialdetailFeedbackExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from select_financialdetail_feedback
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="org.hfut.pojo.SelectFinancialdetailFeedbackExample">
        delete from select_financialdetail_feedback
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.hfut.pojo.SelectFinancialdetailFeedback">
    insert into select_financialdetail_feedback (projectpeopleid, projectpeoplename, 
      projectid, projecttitle, detailid, 
      detailtitle, detailtype, requesttime, 
      state, description, audittime, 
      reviewerid)
    values (#{projectpeopleid,jdbcType=INTEGER}, #{projectpeoplename,jdbcType=VARCHAR}, 
      #{projectid,jdbcType=INTEGER}, #{projecttitle,jdbcType=VARCHAR}, #{detailid,jdbcType=INTEGER}, 
      #{detailtitle,jdbcType=VARCHAR}, #{detailtype,jdbcType=TINYINT}, #{requesttime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=TINYINT}, #{description,jdbcType=VARCHAR}, #{audittime,jdbcType=TIMESTAMP}, 
      #{reviewerid,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="org.hfut.pojo.SelectFinancialdetailFeedback">
        insert into select_financialdetail_feedback
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectpeopleid != null">
                projectpeopleid,
            </if>
            <if test="projectpeoplename != null">
                projectpeoplename,
            </if>
            <if test="projectid != null">
                projectid,
            </if>
            <if test="projecttitle != null">
                projecttitle,
            </if>
            <if test="detailid != null">
                detailid,
            </if>
            <if test="detailtitle != null">
                detailtitle,
            </if>
            <if test="detailtype != null">
                detailtype,
            </if>
            <if test="requesttime != null">
                requesttime,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="audittime != null">
                audittime,
            </if>
            <if test="reviewerid != null">
                reviewerid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectpeopleid != null">
                #{projectpeopleid,jdbcType=INTEGER},
            </if>
            <if test="projectpeoplename != null">
                #{projectpeoplename,jdbcType=VARCHAR},
            </if>
            <if test="projectid != null">
                #{projectid,jdbcType=INTEGER},
            </if>
            <if test="projecttitle != null">
                #{projecttitle,jdbcType=VARCHAR},
            </if>
            <if test="detailid != null">
                #{detailid,jdbcType=INTEGER},
            </if>
            <if test="detailtitle != null">
                #{detailtitle,jdbcType=VARCHAR},
            </if>
            <if test="detailtype != null">
                #{detailtype,jdbcType=TINYINT},
            </if>
            <if test="requesttime != null">
                #{requesttime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=TINYINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="audittime != null">
                #{audittime,jdbcType=TIMESTAMP},
            </if>
            <if test="reviewerid != null">
                #{reviewerid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hfut.pojo.SelectFinancialdetailFeedbackExample"
            resultType="java.lang.Long">
        select count(*) from select_financialdetail_feedback
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update select_financialdetail_feedback
        <set>
            <if test="record.projectpeopleid != null">
                projectpeopleid = #{record.projectpeopleid,jdbcType=INTEGER},
            </if>
            <if test="record.projectpeoplename != null">
                projectpeoplename = #{record.projectpeoplename,jdbcType=VARCHAR},
            </if>
            <if test="record.projectid != null">
                projectid = #{record.projectid,jdbcType=INTEGER},
            </if>
            <if test="record.projecttitle != null">
                projecttitle = #{record.projecttitle,jdbcType=VARCHAR},
            </if>
            <if test="record.detailid != null">
                detailid = #{record.detailid,jdbcType=INTEGER},
            </if>
            <if test="record.detailtitle != null">
                detailtitle = #{record.detailtitle,jdbcType=VARCHAR},
            </if>
            <if test="record.detailtype != null">
                detailtype = #{record.detailtype,jdbcType=TINYINT},
            </if>
            <if test="record.requesttime != null">
                requesttime = #{record.requesttime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=TINYINT},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.audittime != null">
                audittime = #{record.audittime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.reviewerid != null">
                reviewerid = #{record.reviewerid,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update select_financialdetail_feedback
        set projectpeopleid = #{record.projectpeopleid,jdbcType=INTEGER},
        projectpeoplename = #{record.projectpeoplename,jdbcType=VARCHAR},
        projectid = #{record.projectid,jdbcType=INTEGER},
        projecttitle = #{record.projecttitle,jdbcType=VARCHAR},
        detailid = #{record.detailid,jdbcType=INTEGER},
        detailtitle = #{record.detailtitle,jdbcType=VARCHAR},
        detailtype = #{record.detailtype,jdbcType=TINYINT},
        requesttime = #{record.requesttime,jdbcType=TIMESTAMP},
        state = #{record.state,jdbcType=TINYINT},
        description = #{record.description,jdbcType=VARCHAR},
        audittime = #{record.audittime,jdbcType=TIMESTAMP},
        reviewerid = #{record.reviewerid,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>