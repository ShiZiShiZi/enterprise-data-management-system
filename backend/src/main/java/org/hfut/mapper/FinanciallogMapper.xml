<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hfut.mapper.FinanciallogMapper">
    <resultMap id="BaseResultMap" type="org.hfut.pojo.Financiallog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="num" jdbcType="DOUBLE" property="num"/>
        <result column="taxrate" jdbcType="REAL" property="taxrate"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="financialdetailid" jdbcType="INTEGER" property="financialdetailid"/>
        <result column="projectpeopleid" jdbcType="INTEGER" property="projectpeopleid"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, num, taxrate, type, time, financialdetailid, projectpeopleid
  </sql>
    <select id="selectByExample" parameterType="org.hfut.pojo.FinanciallogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from financiallog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from financiallog
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from financiallog
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="org.hfut.pojo.FinanciallogExample">
        delete from financiallog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.hfut.pojo.Financiallog">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into financiallog (num, taxrate, type,
        time, financialdetailid, projectpeopleid
        )
        values (#{num,jdbcType=DOUBLE}, #{taxrate,jdbcType=REAL}, #{type,jdbcType=TINYINT},
        #{time,jdbcType=TIMESTAMP}, #{financialdetailid,jdbcType=INTEGER}, #{projectpeopleid,jdbcType=INTEGER}
        )
  </insert>
    <insert id="insertSelective" parameterType="org.hfut.pojo.Financiallog">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into financiallog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="num != null">
                num,
            </if>
            <if test="taxrate != null">
                taxrate,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="financialdetailid != null">
                financialdetailid,
            </if>
            <if test="projectpeopleid != null">
                projectpeopleid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="num != null">
                #{num,jdbcType=DOUBLE},
            </if>
            <if test="taxrate != null">
                #{taxrate,jdbcType=REAL},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="financialdetailid != null">
                #{financialdetailid,jdbcType=INTEGER},
            </if>
            <if test="projectpeopleid != null">
                #{projectpeopleid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hfut.pojo.FinanciallogExample" resultType="java.lang.Long">
        select count(*) from financiallog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update financiallog
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.num != null">
                num = #{record.num,jdbcType=DOUBLE},
            </if>
            <if test="record.taxrate != null">
                taxrate = #{record.taxrate,jdbcType=REAL},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=TINYINT},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.financialdetailid != null">
                financialdetailid = #{record.financialdetailid,jdbcType=INTEGER},
            </if>
            <if test="record.projectpeopleid != null">
                projectpeopleid = #{record.projectpeopleid,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update financiallog
        set id = #{record.id,jdbcType=INTEGER},
        num = #{record.num,jdbcType=DOUBLE},
        taxrate = #{record.taxrate,jdbcType=REAL},
        type = #{record.type,jdbcType=TINYINT},
        time = #{record.time,jdbcType=TIMESTAMP},
        financialdetailid = #{record.financialdetailid,jdbcType=INTEGER},
        projectpeopleid = #{record.projectpeopleid,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.hfut.pojo.Financiallog">
        update financiallog
        <set>
            <if test="num != null">
                num = #{num,jdbcType=DOUBLE},
            </if>
            <if test="taxrate != null">
                taxrate = #{taxrate,jdbcType=REAL},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="financialdetailid != null">
                financialdetailid = #{financialdetailid,jdbcType=INTEGER},
            </if>
            <if test="projectpeopleid != null">
                projectpeopleid = #{projectpeopleid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.hfut.pojo.Financiallog">
    update financiallog
    set num = #{num,jdbcType=DOUBLE},
      taxrate = #{taxrate,jdbcType=REAL},
      type = #{type,jdbcType=TINYINT},
      time = #{time,jdbcType=TIMESTAMP},
      financialdetailid = #{financialdetailid,jdbcType=INTEGER},
      projectpeopleid = #{projectpeopleid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>