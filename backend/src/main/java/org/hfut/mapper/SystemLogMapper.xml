<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hfut.mapper.SystemLogMapper">
    <resultMap id="BaseResultMap" type="org.hfut.pojo.SystemLog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="log_time" jdbcType="TIMESTAMP" property="logTime"/>
        <result column="action" jdbcType="VARCHAR" property="action"/>
        <result column="action_people_id" jdbcType="INTEGER" property="actionPeopleId"/>
        <result column="result" jdbcType="TINYINT" property="result"/>
        <result column="log_msg" jdbcType="VARCHAR" property="logMsg"/>
        <result column="error_msg" jdbcType="VARCHAR" property="errorMsg"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, log_time, action, action_people_id, result, log_msg, error_msg
  </sql>
    <select id="selectByExample" parameterType="org.hfut.pojo.SystemLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from system_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from system_log
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from system_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="org.hfut.pojo.SystemLogExample">
        delete from system_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.hfut.pojo.SystemLog">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into system_log (log_time, action, action_people_id,
        result, log_msg, error_msg
        )
        values (#{logTime,jdbcType=TIMESTAMP}, #{action,jdbcType=VARCHAR}, #{actionPeopleId,jdbcType=INTEGER},
        #{result,jdbcType=TINYINT}, #{logMsg,jdbcType=VARCHAR}, #{errorMsg,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="org.hfut.pojo.SystemLog">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into system_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logTime != null">
                log_time,
            </if>
            <if test="action != null">
                action,
            </if>
            <if test="actionPeopleId != null">
                action_people_id,
            </if>
            <if test="result != null">
                result,
            </if>
            <if test="logMsg != null">
                log_msg,
            </if>
            <if test="errorMsg != null">
                error_msg,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logTime != null">
                #{logTime,jdbcType=TIMESTAMP},
            </if>
            <if test="action != null">
                #{action,jdbcType=VARCHAR},
            </if>
            <if test="actionPeopleId != null">
                #{actionPeopleId,jdbcType=INTEGER},
            </if>
            <if test="result != null">
                #{result,jdbcType=TINYINT},
            </if>
            <if test="logMsg != null">
                #{logMsg,jdbcType=VARCHAR},
            </if>
            <if test="errorMsg != null">
                #{errorMsg,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hfut.pojo.SystemLogExample" resultType="java.lang.Long">
        select count(*) from system_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update system_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.logTime != null">
                log_time = #{record.logTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.action != null">
                action = #{record.action,jdbcType=VARCHAR},
            </if>
            <if test="record.actionPeopleId != null">
                action_people_id = #{record.actionPeopleId,jdbcType=INTEGER},
            </if>
            <if test="record.result != null">
                result = #{record.result,jdbcType=TINYINT},
            </if>
            <if test="record.logMsg != null">
                log_msg = #{record.logMsg,jdbcType=VARCHAR},
            </if>
            <if test="record.errorMsg != null">
                error_msg = #{record.errorMsg,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update system_log
        set id = #{record.id,jdbcType=INTEGER},
        log_time = #{record.logTime,jdbcType=TIMESTAMP},
        action = #{record.action,jdbcType=VARCHAR},
        action_people_id = #{record.actionPeopleId,jdbcType=INTEGER},
        result = #{record.result,jdbcType=TINYINT},
        log_msg = #{record.logMsg,jdbcType=VARCHAR},
        error_msg = #{record.errorMsg,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.hfut.pojo.SystemLog">
        update system_log
        <set>
            <if test="logTime != null">
                log_time = #{logTime,jdbcType=TIMESTAMP},
            </if>
            <if test="action != null">
                action = #{action,jdbcType=VARCHAR},
            </if>
            <if test="actionPeopleId != null">
                action_people_id = #{actionPeopleId,jdbcType=INTEGER},
            </if>
            <if test="result != null">
                result = #{result,jdbcType=TINYINT},
            </if>
            <if test="logMsg != null">
                log_msg = #{logMsg,jdbcType=VARCHAR},
            </if>
            <if test="errorMsg != null">
                error_msg = #{errorMsg,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.hfut.pojo.SystemLog">
    update system_log
    set log_time = #{logTime,jdbcType=TIMESTAMP},
      action = #{action,jdbcType=VARCHAR},
      action_people_id = #{actionPeopleId,jdbcType=INTEGER},
      result = #{result,jdbcType=TINYINT},
      log_msg = #{logMsg,jdbcType=VARCHAR},
      error_msg = #{errorMsg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>