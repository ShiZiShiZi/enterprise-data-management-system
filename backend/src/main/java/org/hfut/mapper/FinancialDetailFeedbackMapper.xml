<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hfut.mapper.FinancialDetailFeedbackMapper">
    <resultMap id="BaseResultMap" type="org.hfut.pojo.FinancialDetailFeedback">
        <id column="financial_detail_id" jdbcType="INTEGER" property="financialDetailId"/>
        <result column="request_time" jdbcType="TIMESTAMP" property="requestTime"/>
        <result column="response_people_id" jdbcType="INTEGER" property="responsePeopleId"/>
        <result column="response_time" jdbcType="TIMESTAMP" property="responseTime"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    financial_detail_id, request_time, response_people_id, response_time, state, description
  </sql>
    <select id="selectByExample" parameterType="org.hfut.pojo.FinancialDetailFeedbackExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from financial_detail_feedback
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from financial_detail_feedback
        where financial_detail_id = #{financialDetailId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from financial_detail_feedback
    where financial_detail_id = #{financialDetailId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="org.hfut.pojo.FinancialDetailFeedbackExample">
        delete from financial_detail_feedback
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.hfut.pojo.FinancialDetailFeedback">
    insert into financial_detail_feedback (financial_detail_id, request_time, 
      response_people_id, response_time, state, 
      description)
    values (#{financialDetailId,jdbcType=INTEGER}, #{requestTime,jdbcType=TIMESTAMP}, 
      #{responsePeopleId,jdbcType=INTEGER}, #{responseTime,jdbcType=TIMESTAMP}, #{state,jdbcType=TINYINT}, 
      #{description,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="org.hfut.pojo.FinancialDetailFeedback">
        insert into financial_detail_feedback
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="financialDetailId != null">
                financial_detail_id,
            </if>
            <if test="requestTime != null">
                request_time,
            </if>
            <if test="responsePeopleId != null">
                response_people_id,
            </if>
            <if test="responseTime != null">
                response_time,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="financialDetailId != null">
                #{financialDetailId,jdbcType=INTEGER},
            </if>
            <if test="requestTime != null">
                #{requestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="responsePeopleId != null">
                #{responsePeopleId,jdbcType=INTEGER},
            </if>
            <if test="responseTime != null">
                #{responseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=TINYINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.hfut.pojo.FinancialDetailFeedbackExample"
            resultType="java.lang.Long">
        select count(*) from financial_detail_feedback
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update financial_detail_feedback
        <set>
            <if test="record.financialDetailId != null">
                financial_detail_id = #{record.financialDetailId,jdbcType=INTEGER},
            </if>
            <if test="record.requestTime != null">
                request_time = #{record.requestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.responsePeopleId != null">
                response_people_id = #{record.responsePeopleId,jdbcType=INTEGER},
            </if>
            <if test="record.responseTime != null">
                response_time = #{record.responseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=TINYINT},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update financial_detail_feedback
        set financial_detail_id = #{record.financialDetailId,jdbcType=INTEGER},
        request_time = #{record.requestTime,jdbcType=TIMESTAMP},
        response_people_id = #{record.responsePeopleId,jdbcType=INTEGER},
        response_time = #{record.responseTime,jdbcType=TIMESTAMP},
        state = #{record.state,jdbcType=TINYINT},
        description = #{record.description,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.hfut.pojo.FinancialDetailFeedback">
        update financial_detail_feedback
        <set>
            <if test="requestTime != null">
                request_time = #{requestTime,jdbcType=TIMESTAMP},
            </if>
            <if test="responsePeopleId != null">
                response_people_id = #{responsePeopleId,jdbcType=INTEGER},
            </if>
            <if test="responseTime != null">
                response_time = #{responseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=TINYINT},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where financial_detail_id = #{financialDetailId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.hfut.pojo.FinancialDetailFeedback">
    update financial_detail_feedback
    set request_time = #{requestTime,jdbcType=TIMESTAMP},
      response_people_id = #{responsePeopleId,jdbcType=INTEGER},
      response_time = #{responseTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR}
    where financial_detail_id = #{financialDetailId,jdbcType=INTEGER}
  </update>
</mapper>